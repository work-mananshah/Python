import numpy as np
import pandas as pd
from scipy.stats import pearsonr, chi2_contingency
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming you have the 'nba_games.csv' file in the correct directory
nba = pd.read_csv('./nba_games.csv')

# Subset Data to 2010 Season, 2014 Season
nba_2010 = nba[nba.year_id == 2010]
nba_2014 = nba[nba.year_id == 2014]

# Step 1: Points per game for Knicks and Nets in 2010
knicks_pts_10 = nba_2010[nba_2010.fran_id == "Knicks"]['pts']
nets_pts_10 = nba_2010[nba_2010.fran_id == "Nets"]['pts']

# Step 2: Difference in average points (2010)
diff_means_2010 = knicks_pts_10.mean() - nets_pts_10.mean()
print("Difference in average points (2010):", diff_means_2010)

# Step 3: Overlapping histograms (2010)
plt.hist(knicks_pts_10, alpha=0.5, label='Knicks')
plt.hist(nets_pts_10, alpha=0.5, label='Nets')
plt.legend()
plt.title("Point Distribution - Knicks vs Nets (2010)")
plt.xlabel("Points")
plt.ylabel("Frequency")
plt.show()
plt.clf()

# Step 4: Repeat for 2014
knicks_pts_14 = nba_2014[nba_2014.fran_id == "Knicks"]['pts']
nets_pts_14 = nba_2014[nba_2014.fran_id == "Nets"]['pts']
diff_means_2014 = knicks_pts_14.mean() - nets_pts_14.mean()
print("Difference in average points (2014):", diff_means_2014)
plt.hist(knicks_pts_14, alpha=0.5, label='Knicks')
plt.hist(nets_pts_14, alpha=0.5, label='Nets')
plt.legend()
plt.title("Point Distribution - Knicks vs Nets (2014)")
plt.xlabel("Points")
plt.ylabel("Frequency")
plt.show()
plt.clf()

# Step 5: Boxplots for all teams (2010)
sns.boxplot(data=nba_2010, x='fran_id', y='pts')
plt.title("Points Scored by Teams (2010)")
plt.xlabel("Team")
plt.ylabel("Points")
plt.show()
plt.clf()

# Step 6: Contingency table for game result and location
location_result_freq = pd.crosstab(nba_2010.game_result, nba_2010.game_location)
print("Contingency Table:\n", location_result_freq)

# Step 7: Proportions table
location_result_proportions = location_result_freq / location_result_freq.sum()
print("Proportions Table:\n", location_result_proportions)

# Step 8: Chi-Square test
chi2, pval, dof, expected = chi2_contingency(location_result_freq)
print("Chi-Square Statistic:", chi2)
print("Expected Contingency Table:\n", expected)

# Step 9: Covariance between forecast and point_diff
point_diff_forecast_cov = np.cov(nba_2010.forecast, nba_2010.point_diff)
print("Covariance Matrix:\n", point_diff_forecast_cov)

# Step 10: Correlation between forecast and point_diff
point_diff_forecast_corr, _ = pearsonr(nba_2010.forecast, nba_2010.point_diff)
print("Correlation between forecast and point_diff:", point_diff_forecast_corr)

# Step 11: Scatter plot for forecast vs point_diff
plt.scatter(nba_2010.forecast, nba_2010.point_diff)
plt.title("Forecast vs. Point Difference (2010)")
plt.xlabel("538's Forecasted Win Probability")
plt.ylabel("Point Difference")
plt.show()
plt.clf()
