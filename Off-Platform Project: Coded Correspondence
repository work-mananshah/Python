def caesar_cipher(text, offset, decode=False):
    result = ""
    for char in text:
        if char.isalpha():
            shift = 26 - offset if decode else offset
            shifted_char = chr((ord(char.lower()) - 97 + shift) % 26 + 97)
            result += shifted_char.upper() if char.isupper() else shifted_char
        else:
            result += char
    return result

def vigenere_cipher_decode(text, keyword):
    keyword_repeat = (keyword * (len(text) // len(keyword))) + keyword[:len(text) % len(keyword)]
    result = ""
    for i, char in enumerate(text):
        if char.isalpha():
            shift = ord(keyword_repeat[i].lower()) - 97
            shifted_char = chr((ord(char.lower()) - 97 - shift) % 26 + 97)
            result += shifted_char.upper() if char.isupper() else shifted_char
        else:
            result += char
    return result

def brute_force_caesar(text):
    for i in range(26):
        print(f"Offset {i}: {caesar_cipher(text, i, True)}")

# Example Usage
# Decode Vishal's first message with Caesar Cipher
message = "xuo jxuhu! jxyi yi qd unqcfbu ev q squiqh syfxuh."
decoded_message = caesar_cipher(message, 10, True)
print(f"Decoded Message: {decoded_message}")

# Encode a message for Vishal
my_message = "Hello Vishal! This is fun."
encoded_message = caesar_cipher(my_message, 10)
print(f"Encoded Message: {encoded_message}")

# Brute Force a Caesar Cipher message
brute_force_message = "vhfinmxkl atox kxgwxkxw tee hy maxlx hew vbiaxkl hulhexmx."
print("Brute Forcing the message:")
brute_force_caesar(brute_force_message)

# Decode a Vigenère Cipher message
vigenere_message = "txm srom vkda gl lzlgzr qpdb? fepb ejac!"
vigenere_decoded = vigenere_cipher_decode(vigenere_message, "friends")
print(f"Vigenère Decoded Message: {vigenere_decoded}")
